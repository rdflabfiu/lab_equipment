%drilling.cyc

;Zyklus fuer Zentrierbohren, Senken, Tieflochbohren
;History
;Datum       Bemerkung
;05.05.2008  Release 1.0
;28.02.2011  Release 1.1 - Umsetzen der Bearbeitungsrichtung
;29.03.2011  Release 1.2 - ERROR-ID's auf 13xxx verschoben
;06.06.2011  Release 1.3 - G0-Rueckzug bei Spaene brechen,
;                          Pruefung Bearbeitungstiefe ueberarbeitet
;                          Berechnung+Pruefung Bohrtiefe ueberarbeitet
;14.12.2011  Release 1.4 - Verwendung @P3, @P4, @P5, @P7 wg. modaler Gueltigkeit ueberarbeitet 
;25.04.2012  Release 1.5 - Pruefung @P7, @P9 ueberarbeitet
;10.06.2016  Release 1.6 - add label
;14.06.2016  Release 1.7 - additional mode @P11 to retract with feed velocity
;17.06.2016  Release 1.8 - additional mode, stop spindle at drilling depth (oriented and non oriented)
;                        - orientation @P12
;                        - retraction direction @P13, @P14
;12.07.2016  Release 1.9 - additional mode @P11=4, programmed stop M0 at drilling depth, retraction in rapid traverse
;
; @LABEL@

#VAR
  V.L.DRILL_DEPTH     = 0
  V.L.DELTA_DEPTH     = 0
  V.L.COUNTER         = 0
  V.L.FEED            = V.G.FEEDRATE         (Speichern des Vorschubes)
  V.L.END_DRILL_DEPTH = 0 
  V.L.SAFE_CLEAR      = 0  
  V.L.STEP_NBR        = 0
#ENDVAR


(Plausibilitaetspruefungen der Versorgungsparameter und vorbereitende Berechnungen)

$IF @P3 == 0
  #ERROR [ID=13100 RC=2]                     (Error: Sicherheitsabstand nicht definiert)
$ELSE
   @P3 = ABS[@P3] 
$ENDIF

$IF V.G.@P[4].VALID == TRUE AND V.G.@P[5].VALID == TRUE
  #ERROR [ID=13101 RC=0]                     (Warning: Mehrfachdefinition der Bearbeitungstiefe)
  @P5 = 0                                    (Relative Bearbeitungstiefe wird geloescht, absolut ist prior) 
$ENDIF

$IF V.G.@P[4].VALID == FALSE AND V.G.@P[5].VALID == FALSE
  #ERROR [ID=13110 RC=2]                     (Error: Bearbeitungstiefe nicht definiert)
$ENDIF

$IF V.G.@P[4].VALID == FALSE AND V.G.@P[5].VALID == TRUE AND @P5 == 0
  #ERROR [ID=13111 RC=2]                     (Error: Relative Bearbeitungstiefe ist Null)
$ENDIF

$SWITCH @P9                                  (Ablaufverfahren)
  $CASE 0
  $CASE 1
  $CASE 2
  $BREAK
  
  $DEFAULT
    #ERROR [ID=13109 RC=2]                   (Error: Unbekanntes Ablaufverfahren definiert)
$ENDSWITCH

$IF V.G.@P[11].VALID == FALSE                (Retraction mode, default 0 -> G00, 1 -> G01, 2 -> M19 G00, 3 -> M5 G00)
  @P11 = 0
$ENDIF

$SWITCH @P11                                 (Retraction mode)
  $CASE 0
    $BREAK
  $CASE 1
    $BREAK
  $CASE 2
    $BREAK
  $CASE 3
    $BREAK
  $CASE 4
    $BREAK
  $DEFAULT
    #ERROR [ID=13112 RC=2]                   (Error: invalid parametrisation of retraction mode)
    $BREAK
$ENDSWITCH

$IF V.G.@P[12].VALID == FALSE                (Orientation)
  @P12 = 0
$ENDIF

$IF V.G.@P[13].VALID == FALSE                (Retraction to intermediate point in y)
  @P13 = 0
$ELSE
  @P13 = -ABS[@P13]
$ENDIF

$IF V.G.@P[14].VALID == FALSE                (Retraction to intermediate point in z)
  @P14 = 0
$ELSE
  @P14 = -ABS[@P14]
$ENDIF

(Berechnung der Bohrtiefe fuer internen Gebrauch)
$IF V.G.@P[4].VALID == TRUE
  V.L.DRILL_DEPTH = ABS[@P2 - @P4]   
$ELSE
  V.L.DRILL_DEPTH = ABS[@P5]
$ENDIF

$IF V.G.WZ_AKT.P[0] != 0
   $IF V.L.DRILL_DEPTH > [V.G.WZ_AKT.P[0]*DEXP[-4]] 
     #ERROR [ID=13102 RC=2]                  (Error: Programmierte Bearbeitungstiefe ueberschreitet zulaessige Werkzeuglaenge)
   $ENDIF
$ENDIF

(Berechnung der richtigen Zustelltiefe wenn Stufenbohren)
$IF @P9 != 0
  $IF @P7 == 0
    #ERROR [ID=13103 RC=2]                   (Error: Anzahl der Zustellungen nicht definiert)     
  $ELSE
    @P7 = ABS[@P7]
    @P7 = ROUND[@P7]
    V.L.DELTA_DEPTH = V.L.DRILL_DEPTH / @P7
  $ENDIF

  $IF V.G.WZ_AKT.P[1] != 0
    $IF V.L.DELTA_DEPTH  > [V.G.WZ_AKT.P[1] * DEXP[-4]]
      #ERROR [ID=13104 RC=0]                 (Warning: Zustelltiefe ueberschreitet zulaessigen Bearbeitungshub)

      $IF V.L.DRILL_DEPTH MOD [V.G.WZ_AKT.P[1] * DEXP[-4]] == 0
        V.L.STEP_NBR = V.L.DRILL_DEPTH / [V.G.WZ_AKT.P[1] * DEXP[-4]]
       $ELSE
        V.L.STEP_NBR = 1+INT[V.L.DRILL_DEPTH / [V.G.WZ_AKT.P[1] * DEXP[-4]]]  (Zur Sicherheit eine Zustellung mehr)
      $ENDIF 

      V.L.DELTA_DEPTH = V.L.DRILL_DEPTH / V.L.STEP_NBR
    $ENDIF
  $ENDIF

  $IF @P8 == 0
    #ERROR [ID=13105 RC=2]                   (Error: Rueckzugsweg/Vorhalteabstand nicht definiert)     
  $ELSE
    @P8 = ABS[@P8]
  $ENDIF
$ENDIF

(Umsetzen der Bearbeitungsrichtung von alter auf neue Programmierung)
$IF @P10 == 20 OR @P10 == 30 OR @P10 == 50
  @P10 = -1;
$ENDIF

$IF @P10 == 10 OR @P10 == 40 OR @P10 == 60
  @P10 = 1;
$ENDIF

(Bestimmung der Sicherheitsebene und der Bearbeitungstiefe, Richtungsabhaengig)
$SWITCH @P10                            (Richtung)
  $CASE -1
    $IF @P1 <= @P2                      (Rueckzugsebene liegt unterhalb Bezugsebene oder sind gleich)
      #ERROR [ID=13106 RC=2]            (Error: Falsche Definition von Bezugs- und Rueckzugsebene) 
    $ENDIF

    V.L.SAFE_CLEAR = @P2+@P3            (Sicherheitsebene=Bezugsebene+Sicherheitsabstand)

    $IF V.L.SAFE_CLEAR >= @P1           (Resultierende Sicherheitsebene liegt oberhalb Rueckzugsebene oder gleich)
      #ERROR [ID=13107 RC=2]            (Error: Falsche Definition des Sicherheitsabstandes) 
    $ENDIF

    $IF @P5 != 0
        V.L.END_DRILL_DEPTH = @P2-ABS[@P5]   (Endbohrtiefe intern immer absolut)
    $ELSE 
        V.L.END_DRILL_DEPTH = @P4
    $ENDIF
  $BREAK

  $CASE 1
    $IF @P1 >= @P2                      (Rueckzugsebene liegt oberhalb Bezugsebene oder sind gleich)
      #ERROR [ID=13106 RC=2]            (Error: Falsche Definition von Bezugs- und Rueckzugsebene) 
    $ENDIF

    V.L.SAFE_CLEAR = @P2-@P3            (Sicherheitsebene=Bezugsebene-Sicherheitsabstand)

    $IF V.L.SAFE_CLEAR <= @P1           (Resultierende Sicherheitsebene liegt unterhalb Rueckzugsebene oder gleich)
      #ERROR [ID=13107 RC=2]            (Error: Falsche Definition des Sicherheitsabstandes) 
    $ENDIF

    $IF @P5 != 0
        V.L.END_DRILL_DEPTH = @P2+ABS[@P5]   (Endbohrtiefe intern immer absolut)
    $ELSE 
        V.L.END_DRILL_DEPTH = @P4
    $ENDIF
  $BREAK

  $DEFAULT
    #ERROR [ID=13108 RC=2]              (Error: Keine oder unbekannte Bearbeitungsrichtung definiert)
$ENDSWITCH

(Zentrierbohren, Plansenken)
$IF @P9 == 0
  G90 G00 @ZV.L.SAFE_CLEAR              (Fahre im Eilgang auf Sicherheitsabstand)
  G90 G01 @ZV.L.END_DRILL_DEPTH         (Fahre auf Endbohrtiefe)
  #TIME @P6                             (Verweilzeit auf Endbohrtiefe)
  $IF @P11 == 0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 1
    G90 G01 @Z@P1                       (Fahre mit Vorschubgeschwindigkeit auf Rueckzugsebene)
  $ELSEIF @P11 == 2
    M19 S.POS@P12                       (Spindelstopp bei Stellung @P12)
    G91 G01 @X[@P13*COS[@P12]] @Y[@P13*SIN[@P12]] @Z@P14            (Fahre auf Zwischenpunkt)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 3
    M5                                  (Spindelstopp)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 4
    M5                                  (Spindelstopp)
	M0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ENDIF
  $GOTO N999:
$ENDIF

(Tieflochbohren mit Spaene brechen)
$IF @P9 == 1
  G90 G00 @ZV.L.SAFE_CLEAR              (Fahre im Eilgang auf Sicherheitsabstand)
  
  $IF @P10 == -1
    $FOR V.L.COUNTER=1, @P7, 1
   
      $IF V.L.COUNTER != @P7
        G90 G01 @Z[@P2-[V.L.COUNTER * V.L.DELTA_DEPTH]]   (Neue Bohrtiefe)
        G91 G00 @Z+@P8                                    (Rueckzug, Spaene brechen)
      $ELSE
        G90 G01 @ZV.L.END_DRILL_DEPTH   (Letzte Zustellung direkt auf Endbohrtiefe wegen Genauigkeit)
        #TIME @P6
        $BREAK
      $ENDIF
      F[ V.G.FEEDRATE*0.9]          (Jeweils um 10% abgestufter Vorschub, je tiefer umso langsamer)
    $ENDFOR
  $ENDIF

  $IF @P10 == 1
    $FOR V.L.COUNTER=1, @P7, 1
      $IF V.L.COUNTER != @P7
        G90 G01 @Z[@P2+[V.L.COUNTER * V.L.DELTA_DEPTH]]   (Neue Bohrtiefe)
        G91 G00 @Z-@P8                                    (Rueckzug, Spaene brechen)
      $ELSE
        G90 G01 @ZV.L.END_DRILL_DEPTH   (Letzte Zustellung direkt auf Endbohrtiefe wegen Genauigkeit)
        #TIME @P6
        $BREAK
      $ENDIF
      F[ V.G.FEEDRATE*0.9]              (Jeweils um 10% abgestufter Vorschub, je tiefer umso langsamer)
    $ENDFOR
  $ENDIF

  FV.L.FEED                             (Setzen des Bahnvorschubes auf 100% nach Erreichen der Bohrtiefe) 
  $IF @P11 == 0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 1
    G90 G01 @Z@P1                       (Fahre mit Vorschubgeschwindigkeit auf Rueckzugsebene)
  $ELSEIF @P11 == 2
    M19 S.POS@P12                       (Spindelstopp bei Stellung @P12)
    G91 G01 @X[@P13*COS[@P12]] @Y[@P13*SIN[@P12]] @Z@P14            (Fahre auf Zwischenpunkt)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 3
    M5                                  (Spindelstopp)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 4
    M5                                  (Spindelstopp)
	M0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ENDIF
  $GOTO N999:
$ENDIF

(Tieflochbohren mit Spaene entladen)
$IF @P9 == 2
  G90 G00 @ZV.L.SAFE_CLEAR              (Fahre im Eilgang auf Sicherheitsabstand)

  $IF @P10 == -1
    $FOR V.L.COUNTER=1, @P7, 1
      $IF V.L.COUNTER != 1                                           (Vorhalteabstand anfahren)
        G90 G00 @Z[[@P2-[[V.L.COUNTER-1] * V.L.DELTA_DEPTH]]+@P8]    (Neue Anfahrtiefe)
      $ENDIF
      $IF V.L.COUNTER != @P7
        G90 G01 @Z[@P2-[V.L.COUNTER * V.L.DELTA_DEPTH]]              (Neue Bohrtiefe)
        G90 G00 @ZV.L.SAFE_CLEAR                                     (Rueckzug, Spaene entladen)
      $ELSE
        G90 G01 @ZV.L.END_DRILL_DEPTH   (Letzte Zustellung direkt auf Endbohrtiefe wegen Genauigkeit)
        #TIME @P6
        $BREAK
      $ENDIF
      F[V.G.FEEDRATE*0.9]               (Jeweils um 10% abgestufter Vorschub, je tiefer umso langsamer)
    $ENDFOR
  $ENDIF

  $IF @P10 == 1
    $FOR V.L.COUNTER=1, @P7, 1
      $IF V.L.COUNTER != 1                                           (Vorhalteabstand anfahren)
        G90 G00 @Z[[@P2+[[V.L.COUNTER-1] * V.L.DELTA_DEPTH]]-@P8]    (Neue Anfahrtiefe)
      $ENDIF
      $IF V.L.COUNTER != @P7
        G90 G01 @Z[@P2+[V.L.COUNTER * V.L.DELTA_DEPTH]]              (Neue Bohrtiefe)
        G90 G00 @ZV.L.SAFE_CLEAR                                     (Rueckzug, Spaene entladen)
      $ELSE
        G90 G01 @ZV.L.END_DRILL_DEPTH   (Letzte Zustellung direkt auf Endbohrtiefe wegen Genauigkeit)
        #TIME @P6
        $BREAK
      $ENDIF
      F[V.G.FEEDRATE*0.9]               (Jeweils um 10% abgestufter Vorschub, je tiefer umso langsamer)
    $ENDFOR
  $ENDIF

  FV.L.FEED                             (Setzen des Bahnvorschubes auf 100% nach Erreichen der Bohrtiefe)
  $IF @P11 == 0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 1
    G90 G01 @Z@P1                       (Fahre mit Vorschubgeschwindigkeit auf Rueckzugsebene)
  $ELSEIF @P11 == 2
    M19 S.POS@P12                       (Spindelstopp bei Stellung @P12)
    G91 G01 @X[@P13*COS[@P12]] @Y[@P13*SIN[@P12]] @Z@P14            (Fahre auf Zwischenpunkt)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 3
    M5                                  (Spindelstopp)
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ELSEIF @P11 == 4
    M5                                  (Spindelstopp)
	M0
    G90 G00 @Z@P1                       (Fahre im Eilgang auf Rueckzugsebene)
  $ENDIF
$ENDIF

N999: M17
